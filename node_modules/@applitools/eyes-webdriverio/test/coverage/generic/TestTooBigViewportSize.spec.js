const cwd = process.cwd()
const path = require('path')
const assert = require('assert')
const spec = require(path.resolve(cwd, 'src/SpecDriver'))
const {Configuration} = require(cwd)
const {testSetup} = require('@applitools/sdk-shared')

describe('Coverage Tests', () => {
  let driver
  let eyes
  let baselineTestName
  beforeEach(async () => {
    driver = await spec.build({browser: "chrome", headless: false} || {browser: 'chrome'})
    eyes = testSetup.getEyes({
      isVisualGrid: undefined,
      isCssStitching: true,
      branchName: "master",
    })
  })
  afterEach(async () => {
    await spec.cleanup(driver)
  })
  it('TestTooBigViewportSize (@chrome)', async () => {
    await eyes.open(
            driver,
            "Eyes Selenium SDK - Fluent API",
            "TestTooBigViewportSize",
            {width: 5000, height: 5000},
          )
    const cachedViewportSize = await eyes.getViewportSize()
    const expectedViewportSize = await spec.executeScript(driver, "return {height: window.innerHeight, width: window.innerWidth}", ...[])
    assert.strictEqual(cachedViewportSize['getWidth'](...[]), expectedViewportSize['width'], undefined)
    assert.strictEqual(cachedViewportSize['getHeight'](...[]), expectedViewportSize['height'], undefined)
    await eyes.close(false)
  })
})